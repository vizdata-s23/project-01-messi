{
  "hash": "12df769666629719312b719a07ef8933",
  "result": {
    "markdown": "### Load Packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n```\n:::\n\n\n### Load Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwcmatches <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/wcmatches.csv')\nworldcups <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv')\npenalties <- readr::read_csv(\"data/penalties_stats_aa.csv\") #external data from kaggle\n```\n:::\n\n\n#### Merge Data\n\n\n::: {.cell}\n\n:::\n\n\n#### New Variables\n\n\n::: {.cell}\n\n:::\n\n\n## Question 1\n\n**scatterplot showing the number of goals scored per game of each world cup**\n\n**x-axis will be `year` and the y-axis will be the average `goals_scored` per game of that world cup**.\n\n**annotations on top of this graph to show when certain changes were implemented in the World Cup**,\n\n**may add another variable such as continent (color) in order to see if the if the power rankings across the world have shifted over time**\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Code_files/figure-html/q1-plot1-1.png){width=672}\n:::\n:::\n\n\n## Question 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq2 <- wcmatches %>%\n  pivot_longer(c(home_team, away_team)) %>%\n  rename(home_away = name,\n         team = value)\n```\n:::\n\n\n### Add Continent\n\n#### Making continent lists\n\n\n::: {.cell}\n\n```{.r .cell-code}\nEurope  <- c('France', \"Belgium\", 'Yugoslavia', 'Romania', 'Sweden', 'Austria', 'Germany', 'Spain', 'Czechoslovakia', 'Hungary', 'Italy', 'Netherlands', 'Switzerland', 'Poland', 'Norway', 'England', 'Scotland', 'West Germany', 'Turkey', 'Northern Ireland', 'Wales', 'Bulgaria', 'Portugal', 'East Germany', 'Denmark', 'Republic of Ireland', 'Greece', 'Croatia', 'FR Yugoslavia', 'Serbia', 'Slovenia', 'Czech Republic', 'Ukraine', 'Slovakia', 'Iceland', 'Bosnia and Herzegovina') \n\nAsia <- c('South Korea', 'Soviet Union', 'North Korea', 'Israel', 'Iran', 'Cameroon', 'Kuwait', 'Iraq', 'United Arab Emirates', 'Russia', 'Saudi Arabia', 'Japan', 'China PR', 'Australia', 'New Zealand')\n\nAfrica <- c('Egypt', 'Morocco', 'Zaire', 'Tunisia', 'Algeria', 'Nigeria', 'South Africa', 'Senegal', 'Ivory Coast', 'Angola', 'Ghana', 'Togo' )\n\nNorth_America <- c('Mexico', 'United States', 'Cuba', 'Dutch West Indies', 'Haiti', 'El Salvador', \"Honduras\", 'Canada', 'Costa Rica', 'Jamaica', 'Trinidad and Tobago', 'Panama')\n\nSouth_America <- c('Brazil', 'Peru', 'Argentina', 'Chile', 'Bolivia', 'Paraguay', 'Uruguay', 'Colombia','Ecuador')\n```\n:::\n\n\n### Make continent variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq2 <- q2 %>%\n  mutate(continent =\n           case_when(team %in% Europe ~ 'Europe',\n                     team %in% Asia ~ 'Asia/Oceania',\n                     team %in% South_America ~ 'South America',\n                     team %in% North_America ~ 'North America',\n                     team %in% Africa ~ 'Africa',\n                     TRUE ~ 'Other'))\n```\n:::\n\n\n### Early graphs\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncontinent_per_year <- q2 %>%\n  group_by(year, continent) %>%\n  summarize(teams = unique(team)) %>%\n  group_by(year, continent) %>%\n  summarize(count_per_continent = n())\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year', 'continent'. You can override using\nthe `.groups` argument.\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nfreq <- continent_per_year %>%\n  group_by(year) %>%\n  mutate(total = sum(count_per_continent),\n         pct = count_per_continent/total) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(freq, aes(x = year, y = pct, color = continent)) + geom_line()\n```\n\n::: {.cell-output-display}\n![](Code_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Code_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}