{
  "hash": "1e3b6fd2d67ca7f99e5174f64ed29db9",
  "result": {
    "markdown": "---\ntitle: \"The Evolution of the World Cup\"\nsubtitle: \"STA/ISS 313 - Spring 2023 - Project 1\"\nauthor: \"Team Messi\"\ntitle-slide-attributes:\n  data-background-image: images/watercolour_sys02_img34_teacup-ocean.jpg\n  data-background-size: stretch\n  data-slide-number: none\nformat: revealjs\neditor: visual\nexecute:\n  echo: false\n---\n\n\n\n\n\n\n\n\n\n\n\n\n## Introduction\n\n-   Introduction\n\n-   Introduction\n\n## Q1: The Effect of New Rules on Goals Scored\n\n-   The rules in the World Cup have changed a lot over time (# of teams, VAR, penalties, etc.)\n\n-   How has this affected the goal scoring in World Cup games throughout time?\n\n    ::: columns\n    ::: {.column width=\"50%\"}\n    Plot 1\n\n    -   scatterplot with goals per game each tournament\n    -   annotate years with new rules and events\n    :::\n\n    ::: {.column width=\"50%\"}\n    Plot 2\n\n    -   line graph showing penalties per game and proportion of goals that are penalties\n    :::\n    :::\n\n## Goals per game across World Cups\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](presentation_files/figure-revealjs/q1-plot1-1.png){width=70%}\n:::\n:::\n\n\n## Observations\n\n-   The introduction of and increasing the number of teams did not affect goal scoring overall\n-   Technology implementations in 2014 and 2018 increased goals scored per game\n\n## Plot and text\n\n::: columns\n::: {.column width=\"50%\"}\n-   Some text\n-   goes here\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n:::\n\n:::\n:::\n\n# A new section...\n\n## Tables\n\nIf you want to generate a table, make sure it is in the HTML format (instead of Markdown or other formats), e.g.,\n\n\n::: {.cell}\n\n:::\n\n\n## Images\n\n![Image credit: Danielle Navarro, Percolate.](images/watercolour_sys02_img34_teacup-ocean.png)\n\n## Math Expressions {.smaller}\n\nYou can write LaTeX math expressions inside a pair of dollar signs, e.g. \\$\\alpha+\\beta\\$ renders $\\alpha+\\beta$. You can use the display style with double dollar signs:\n\n    $$\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i$$\n\n$$\\bar{X}=\\frac{1}{n}\\sum_{i=1}^nX_i$$\n\nLimitations:\n\n1.  The source code of a LaTeX math expression must be in one line, unless it is inside a pair of double dollar signs, in which case the starting `$$` must appear in the very beginning of a line, followed immediately by a non-space character, and the ending `$$` must be at the end of a line, led by a non-space character;\n\n2.  There should not be spaces after the opening `$` or before the closing `$`.\n\n# Wrap up\n\n## Feeling adventurous?\n\n-   You are welcomed to use the default styling of the slides. In fact, that's what I expect majority of you will do. You will differentiate yourself with the content of your presentation.\n\n-   But some of you might want to play around with slide styling. Some solutions for this can be found at https://quarto.org/docs/presentations/revealjs.\n",
    "supporting": [
      "presentation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}